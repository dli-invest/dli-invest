Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.10.8/x64/lib/python3.10/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/opt/hostedtoolcache/Python/3.10.8/x64/lib/python3.10/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/opt/hostedtoolcache/Python/3.10.8/x64/lib/python3.10/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/opt/hostedtoolcache/Python/3.10.8/x64/lib/python3.10/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/opt/hostedtoolcache/Python/3.10.8/x64/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/hostedtoolcache/Python/3.10.8/x64/lib/python3.10/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/opt/hostedtoolcache/Python/3.10.8/x64/lib/python3.10/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/opt/hostedtoolcache/Python/3.10.8/x64/lib/python3.10/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import yfinance as yf
import pandas as pd
from mlfinlab.portfolio_optimization.mean_variance import MeanVarianceOptimisation

def get_prices(stocks, start_date="2019-03-01", end_date="2020-05-30"):
    stocks_string = " ".join(stocks)
    data = yf.download(stocks_string, start=start_date, end=end_date,
                      group_by="ticker")
    data = data.fillna(method='ffill')
    # Drop columns with no entries
    data = data.dropna(axis='columns', how='all')

    prices_df = pd.concat([data[ticker]["Close"] for ticker in stocks], axis=1)
    prices_df.columns = stocks
    return prices_df
stocks = ["NEXCF", "ACB.TO", "BB.TO", "N.V", "APHA.TO", "TTT.CN", "HUT.TO", "HIVE.V", "AC.TO", "CVE.TO"]
asset_prices = get_prices(stocks) 
# Compute IVP weights
mvo = MeanVarianceOptimisation()
mvo.allocate(asset_names=asset_prices.columns, asset_prices=asset_prices,
             solution='max_sharpe')
ivp_weights = mvo.weights.sort_values(by=0, ascending=False, axis=1)
with pd.option_context('display.max_rows', None, 'display.max_columns', None): 
  print(ivp_weights)
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mModuleNotFoundError[0m                       Traceback (most recent call last)
Cell [0;32mIn [2], line 3[0m
[1;32m      1[0m [38;5;28;01mimport[39;00m [38;5;21;01myfinance[39;00m [38;5;28;01mas[39;00m [38;5;21;01myf[39;00m
[1;32m      2[0m [38;5;28;01mimport[39;00m [38;5;21;01mpandas[39;00m [38;5;28;01mas[39;00m [38;5;21;01mpd[39;00m
[0;32m----> 3[0m [38;5;28;01mfrom[39;00m [38;5;21;01mmlfinlab[39;00m[38;5;21;01m.[39;00m[38;5;21;01mportfolio_optimization[39;00m[38;5;21;01m.[39;00m[38;5;21;01mmean_variance[39;00m [38;5;28;01mimport[39;00m MeanVarianceOptimisation
[1;32m      5[0m [38;5;28;01mdef[39;00m [38;5;21mget_prices[39m(stocks, start_date[38;5;241m=[39m[38;5;124m"[39m[38;5;124m2019-03-01[39m[38;5;124m"[39m, end_date[38;5;241m=[39m[38;5;124m"[39m[38;5;124m2020-05-30[39m[38;5;124m"[39m):
[1;32m      6[0m     stocks_string [38;5;241m=[39m [38;5;124m"[39m[38;5;124m [39m[38;5;124m"[39m[38;5;241m.[39mjoin(stocks)

[0;31mModuleNotFoundError[0m: No module named 'mlfinlab'
ModuleNotFoundError: No module named 'mlfinlab'

