Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import yfinance as yf
import mplfinance as mpf
sp = yf.Ticker("MBCF")
# Consider grabbing for valid date index instead
daily = sp.history(start="2016-01-02")
mpf.plot(daily,type='line')

last_year = sp.history(start="2021-03-14")
mpf.plot(last_year,type='candle',mav=(50, 100),volume=True)
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mAmbiguousTimeError[0m                        Traceback (most recent call last)
Cell [0;32mIn[4], line 5[0m
[1;32m      3[0m sp [38;5;241m=[39m yf[38;5;241m.[39mTicker([38;5;124m"[39m[38;5;124mMBCF[39m[38;5;124m"[39m)
[1;32m      4[0m [38;5;66;03m# Consider grabbing for valid date index instead[39;00m
[0;32m----> 5[0m daily [38;5;241m=[39m [43msp[49m[38;5;241;43m.[39;49m[43mhistory[49m[43m([49m[43mstart[49m[38;5;241;43m=[39;49m[38;5;124;43m"[39;49m[38;5;124;43m2016-01-02[39;49m[38;5;124;43m"[39;49m[43m)[49m
[1;32m      6[0m mpf[38;5;241m.[39mplot(daily,[38;5;28mtype[39m[38;5;241m=[39m[38;5;124m'[39m[38;5;124mline[39m[38;5;124m'[39m)
[1;32m      8[0m last_year [38;5;241m=[39m sp[38;5;241m.[39mhistory(start[38;5;241m=[39m[38;5;124m"[39m[38;5;124m2021-03-14[39m[38;5;124m"[39m)

File [0;32m/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/yfinance/utils.py:114[0m, in [0;36mlog_indent_decorator.<locals>.wrapper[0;34m(*args, **kwargs)[0m
[1;32m    111[0m logger[38;5;241m.[39mdebug([38;5;124mf[39m[38;5;124m'[39m[38;5;124mEntering [39m[38;5;132;01m{[39;00mfunc[38;5;241m.[39m[38;5;18m__name__[39m[38;5;132;01m}[39;00m[38;5;124m()[39m[38;5;124m'[39m)
[1;32m    113[0m [38;5;28;01mwith[39;00m IndentationContext():
[0;32m--> 114[0m     result [38;5;241m=[39m [43mfunc[49m[43m([49m[38;5;241;43m*[39;49m[43margs[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m
[1;32m    116[0m logger[38;5;241m.[39mdebug([38;5;124mf[39m[38;5;124m'[39m[38;5;124mExiting [39m[38;5;132;01m{[39;00mfunc[38;5;241m.[39m[38;5;18m__name__[39m[38;5;132;01m}[39;00m[38;5;124m()[39m[38;5;124m'[39m)
[1;32m    117[0m [38;5;28;01mreturn[39;00m result

File [0;32m/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/yfinance/base.py:351[0m, in [0;36mTickerBase.history[0;34m(self, period, interval, start, end, prepost, actions, auto_adjust, back_adjust, repair, keepna, proxy, rounding, timeout, debug, raise_errors)[0m
[1;32m    349[0m             splits [38;5;241m=[39m splits[38;5;241m.[39mloc[startDt:]
[1;32m    350[0m [38;5;28;01mif[39;00m end [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:
[0;32m--> 351[0m     endDt [38;5;241m=[39m [43mpd[49m[38;5;241;43m.[39;49m[43mTimestamp[49m[43m([49m[43mend[49m[43m,[49m[43m [49m[43munit[49m[38;5;241;43m=[39;49m[38;5;124;43m'[39;49m[38;5;124;43ms[39;49m[38;5;124;43m'[39;49m[43m)[49m[38;5;241;43m.[39;49m[43mtz_localize[49m[43m([49m[43mtz[49m[43m)[49m
[1;32m    352[0m     [38;5;28;01mif[39;00m dividends [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:
[1;32m    353[0m         dividends [38;5;241m=[39m dividends[dividends[38;5;241m.[39mindex [38;5;241m<[39m endDt]

File [0;32mtimestamps.pyx:2327[0m, in [0;36mpandas._libs.tslibs.timestamps.Timestamp.tz_localize[0;34m()[0m

File [0;32mtzconversion.pyx:180[0m, in [0;36mpandas._libs.tslibs.tzconversion.tz_localize_to_utc_single[0;34m()[0m

File [0;32mtzconversion.pyx:368[0m, in [0;36mpandas._libs.tslibs.tzconversion.tz_localize_to_utc[0;34m()[0m

[0;31mAmbiguousTimeError[0m: Cannot infer dst time from 2023-11-05 01:02:59, try using the 'ambiguous' argument
AmbiguousTimeError: Cannot infer dst time from 2023-11-05 01:02:59, try using the 'ambiguous' argument

