Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
from diagrams import Cluster, Diagram, Edge
from diagrams.programming.language import Python, Csharp, Go
from diagrams.onprem.vcs import Github, Git
from diagrams.onprem.ci import GithubActions
from diagrams.saas.chat import Discord
from diagrams.gcp.compute import AppEngine, GCE, GCF, Run
from diagrams.gcp.devtools import Code, Build
from diagrams.elastic.elasticsearch import Elasticsearch
from diagrams.generic.storage import Storage
# blue - build/cron
# purple - notification
# green - data saving
with Diagram("stock-arch-v2", show=False):
  with Cluster ("Github Actions"):
    monthly_job_ga = GithubActions('monthly job')
    weekly_job_ga = GithubActions('weekly job')
    monthly_job_ga - weekly_job_ga
    daily_job_ga = GithubActions('daily_job')
    weekly_job_ga - daily_job_ga
    manual_job_ga = GithubActions('manual push')
    
  with Cluster("Discord"):
    dis_alerts = Discord('alerts')
    dis_investing = Discord('events')
    dis_news_halts = Discord('news + halts')
    dis_video = Discord('videos')
    # Code status not particular helpful for high level diagram
  # source = Git("source")
  with Cluster("Code Sources"):
      with Cluster("Github"):
        account = Github("account")
        dli_invest = Github("dli-invest")
        workers = [account,
                   dli_invest
                  ]
        # Personal repos related to stocks
        with Cluster('account repos'):
          stock_screener = Python('stock_screener')
          cad_tickers_list = Git('cad_tickers_list')
          cad_tickers = Python('cad_tickers')
          stocks_app = Python('stocks_app')
          news_app = Csharp('news app')
          finfiber = Go('FinFiber')
          gcf_functions = Git('Cloud Functions')
          dash_stocks = Python('Dash Stocks')
          account_repos = [stock_screener,
                            cad_tickers,
                            news_app,
                           stocks_app,
                           finfiber,
                           gcf_functions,
                           dash_stocks
                    ]
        with Cluster('dli-invest repos'):
          with Cluster('ytube nlp'):
            # grabbing youtube transcriptions
            ytube_nlp = Python('Transcripts')
            # Uses assembly AI and manually downloads videos
            ytube_nlp_ai = Python('Manual NLP')
            ytube = [ytube_nlp, ytube_nlp_ai]
          # investing book
          stock_scrapper = Python('stock-scrapper')
          news_and_halts = Python('News and Halts')
          earnings_calendar = Python('Earnings Calendar')
          # notes 
          with Cluster('Algorithmic Trading'):
              zipline_experiments = Python('Zipline')
          with Cluster('notes'):
              investing_book = Python('Investing Book')
              
          # ytube - investing_book
          # ytube - stock_scrapper

  # Cluster for Google Cloud
  with Cluster("Google Cloud Platform"):
    gcp_build = Build("Auto Build")
    sapp = Run("stocks app")
    fstocks = Run('fstocks')
    g_finfiber = AppEngine('finfiber')
    utilities = GCF('utility')
    gcp_serverless = [sapp,
                  fstocks,
                  g_finfiber
                ]
    gcp_build - gcp_serverless

  # Links to google cloud platform
  gcf_functions - Edge(label='manual deploy', color='orange') >> utilities
  finfiber - Edge (color='orange', style='dashed') >> gcp_build
  stocks_app - Edge (color='orange', style='dashed') >> gcp_build
  dash_stocks - Edge(color='orange', style='dashed') >> gcp_build
  # Other nodes
  news_db = Elasticsearch('news_db')
  fauna_db_halts_news = Storage('faunadb')

  # Dependencies on cad_Tickers
  cad_tickers - Edge(label="uses", color="purple", style='dotted') <<  [ stock_screener, cad_tickers_list]
  cad_tickers_list - Edge(label="gets stocks", color='purple', style='dotted') << [
      stock_scrapper
  ]
  # cad_tickers - Edge(label="uses", color='purple', style='dotted') << cad_tickers_list
  # Git links
  dli_invest >> ytube
  account >> account_repos
  
  # Connecting to other nodes
  news_app >> Edge(label='save data', color='green', style='dashed') >> news_db
  fauna_db_halts_news >> Edge(labe='save data', color='green', style='dashed') >> news_and_halts
  # repos calling github actions
  cad_tickers_list >> Edge(color='blue') >> monthly_job_ga
  monthly_job_ga >> Edge(label="update stocks", color='green', style="dashed") >> cad_tickers_list
  # Discord links
  # stock_screener >> Edge(color='purple') >> dis_alerts
  stock_screener >> Edge(color='blue') >> daily_job_ga
  stock_scrapper >> Edge(color='blue') >> weekly_job_ga
  news_app >> Edge(color='blue') >> daily_job_ga
  ytube_nlp >> Edge(color='blue') >> daily_job_ga
  ytube_nlp_ai >> Edge(color='blue') >> manual_job_ga
  investing_book >> Edge(color='blue') >> manual_job_ga
  earnings_calendar >> Edge(color='blue') >> weekly_job_ga
  # notifications sent out from github actions
  daily_job_ga >> Edge(color='purple') >> dis_alerts
  daily_job_ga >> Edge(color='purple') >> dis_news_halts
  manual_job_ga >> Edge(color='purple') >> dis_video
  daily_job_ga >> Edge(color='purple') >> dis_video
  # cad_tickers_list_ga >> Edge(label="notification") >> code_status
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mFileNotFoundError[0m                         Traceback (most recent call last)
File [0;32m/opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/graphviz/backend/execute.py:81[0m, in [0;36mrun_check[0;34m(cmd, input_lines, encoding, quiet, **kwargs)[0m
[1;32m     80[0m     [38;5;28;01melse[39;00m:
[0;32m---> 81[0m         proc [38;5;241m=[39m [43msubprocess[49m[38;5;241;43m.[39;49m[43mrun[49m[43m([49m[43mcmd[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m
[1;32m     82[0m [38;5;28;01mexcept[39;00m [38;5;167;01mOSError[39;00m [38;5;28;01mas[39;00m e:

File [0;32m/opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/subprocess.py:503[0m, in [0;36mrun[0;34m(input, capture_output, timeout, check, *popenargs, **kwargs)[0m
[1;32m    501[0m     kwargs[[38;5;124m'[39m[38;5;124mstderr[39m[38;5;124m'[39m] [38;5;241m=[39m PIPE
[0;32m--> 503[0m [38;5;28;01mwith[39;00m [43mPopen[49m[43m([49m[38;5;241;43m*[39;49m[43mpopenargs[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m [38;5;28;01mas[39;00m process:
[1;32m    504[0m     [38;5;28;01mtry[39;00m:

File [0;32m/opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/subprocess.py:971[0m, in [0;36mPopen.__init__[0;34m(self, args, bufsize, executable, stdin, stdout, stderr, preexec_fn, close_fds, shell, cwd, env, universal_newlines, startupinfo, creationflags, restore_signals, start_new_session, pass_fds, user, group, extra_groups, encoding, errors, text, umask, pipesize)[0m
[1;32m    968[0m             [38;5;28mself[39m[38;5;241m.[39mstderr [38;5;241m=[39m io[38;5;241m.[39mTextIOWrapper([38;5;28mself[39m[38;5;241m.[39mstderr,
[1;32m    969[0m                     encoding[38;5;241m=[39mencoding, errors[38;5;241m=[39merrors)
[0;32m--> 971[0m     [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_execute_child[49m[43m([49m[43margs[49m[43m,[49m[43m [49m[43mexecutable[49m[43m,[49m[43m [49m[43mpreexec_fn[49m[43m,[49m[43m [49m[43mclose_fds[49m[43m,[49m
[1;32m    972[0m [43m                        [49m[43mpass_fds[49m[43m,[49m[43m [49m[43mcwd[49m[43m,[49m[43m [49m[43menv[49m[43m,[49m
[1;32m    973[0m [43m                        [49m[43mstartupinfo[49m[43m,[49m[43m [49m[43mcreationflags[49m[43m,[49m[43m [49m[43mshell[49m[43m,[49m
[1;32m    974[0m [43m                        [49m[43mp2cread[49m[43m,[49m[43m [49m[43mp2cwrite[49m[43m,[49m
[1;32m    975[0m [43m                        [49m[43mc2pread[49m[43m,[49m[43m [49m[43mc2pwrite[49m[43m,[49m
[1;32m    976[0m [43m                        [49m[43merrread[49m[43m,[49m[43m [49m[43merrwrite[49m[43m,[49m
[1;32m    977[0m [43m                        [49m[43mrestore_signals[49m[43m,[49m
[1;32m    978[0m [43m                        [49m[43mgid[49m[43m,[49m[43m [49m[43mgids[49m[43m,[49m[43m [49m[43muid[49m[43m,[49m[43m [49m[43mumask[49m[43m,[49m
[1;32m    979[0m [43m                        [49m[43mstart_new_session[49m[43m)[49m
[1;32m    980[0m [38;5;28;01mexcept[39;00m:
[1;32m    981[0m     [38;5;66;03m# Cleanup if the child failed starting.[39;00m

File [0;32m/opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/subprocess.py:1863[0m, in [0;36mPopen._execute_child[0;34m(self, args, executable, preexec_fn, close_fds, pass_fds, cwd, env, startupinfo, creationflags, shell, p2cread, p2cwrite, c2pread, c2pwrite, errread, errwrite, restore_signals, gid, gids, uid, umask, start_new_session)[0m
[1;32m   1862[0m         err_msg [38;5;241m=[39m os[38;5;241m.[39mstrerror(errno_num)
[0;32m-> 1863[0m     [38;5;28;01mraise[39;00m child_exception_type(errno_num, err_msg, err_filename)
[1;32m   1864[0m [38;5;28;01mraise[39;00m child_exception_type(err_msg)

[0;31mFileNotFoundError[0m: [Errno 2] No such file or directory: PosixPath('dot')

The above exception was the direct cause of the following exception:

[0;31mExecutableNotFound[0m                        Traceback (most recent call last)
Cell [0;32mIn[3], line 13[0m
[1;32m      9[0m [38;5;28;01mfrom[39;00m [38;5;21;01mdiagrams[39;00m[38;5;21;01m.[39;00m[38;5;21;01mgeneric[39;00m[38;5;21;01m.[39;00m[38;5;21;01mstorage[39;00m [38;5;28;01mimport[39;00m Storage
[1;32m     10[0m [38;5;66;03m# blue - build/cron[39;00m
[1;32m     11[0m [38;5;66;03m# purple - notification[39;00m
[1;32m     12[0m [38;5;66;03m# green - data saving[39;00m
[0;32m---> 13[0m [38;5;28;01mwith[39;00m Diagram([38;5;124m"[39m[38;5;124mstock-arch-v2[39m[38;5;124m"[39m, show[38;5;241m=[39m[38;5;28;01mFalse[39;00m):
[1;32m     14[0m   [38;5;28;01mwith[39;00m Cluster ([38;5;124m"[39m[38;5;124mGithub Actions[39m[38;5;124m"[39m):
[1;32m     15[0m     monthly_job_ga [38;5;241m=[39m GithubActions([38;5;124m'[39m[38;5;124mmonthly job[39m[38;5;124m'[39m)

File [0;32m/opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/diagrams/__init__.py:158[0m, in [0;36mDiagram.__exit__[0;34m(self, exc_type, exc_value, traceback)[0m
[1;32m    157[0m [38;5;28;01mdef[39;00m [38;5;21m__exit__[39m([38;5;28mself[39m, exc_type, exc_value, traceback):
[0;32m--> 158[0m     [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mrender[49m[43m([49m[43m)[49m
[1;32m    159[0m     [38;5;66;03m# Remove the graphviz file leaving only the image.[39;00m
[1;32m    160[0m     os[38;5;241m.[39mremove([38;5;28mself[39m[38;5;241m.[39mfilename)

File [0;32m/opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/diagrams/__init__.py:192[0m, in [0;36mDiagram.render[0;34m(self)[0m
[1;32m    190[0m         [38;5;28mself[39m[38;5;241m.[39mdot[38;5;241m.[39mrender([38;5;28mformat[39m[38;5;241m=[39mone_format, view[38;5;241m=[39m[38;5;28mself[39m[38;5;241m.[39mshow, quiet[38;5;241m=[39m[38;5;28;01mTrue[39;00m)
[1;32m    191[0m [38;5;28;01melse[39;00m:
[0;32m--> 192[0m     [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mdot[49m[38;5;241;43m.[39;49m[43mrender[49m[43m([49m[38;5;28;43mformat[39;49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43moutformat[49m[43m,[49m[43m [49m[43mview[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mshow[49m[43m,[49m[43m [49m[43mquiet[49m[38;5;241;43m=[39;49m[38;5;28;43;01mTrue[39;49;00m[43m)[49m

File [0;32m/opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/graphviz/_tools.py:171[0m, in [0;36mdeprecate_positional_args.<locals>.decorator.<locals>.wrapper[0;34m(*args, **kwargs)[0m
[1;32m    162[0m     wanted [38;5;241m=[39m [38;5;124m'[39m[38;5;124m, [39m[38;5;124m'[39m[38;5;241m.[39mjoin([38;5;124mf[39m[38;5;124m'[39m[38;5;132;01m{[39;00mname[38;5;132;01m}[39;00m[38;5;124m=[39m[38;5;132;01m{[39;00mvalue[38;5;132;01m!r}[39;00m[38;5;124m'[39m
[1;32m    163[0m                        [38;5;28;01mfor[39;00m name, value [38;5;129;01min[39;00m deprecated[38;5;241m.[39mitems())
[1;32m    164[0m     warnings[38;5;241m.[39mwarn([38;5;124mf[39m[38;5;124m'[39m[38;5;124mThe signature of [39m[38;5;132;01m{[39;00mfunc[38;5;241m.[39m[38;5;18m__name__[39m[38;5;132;01m}[39;00m[38;5;124m will be reduced[39m[38;5;124m'[39m
[1;32m    165[0m                   [38;5;124mf[39m[38;5;124m'[39m[38;5;124m to [39m[38;5;132;01m{[39;00msupported_number[38;5;132;01m}[39;00m[38;5;124m positional args[39m[38;5;124m'[39m
[1;32m    166[0m                   [38;5;124mf[39m[38;5;124m'[39m[38;5;124m [39m[38;5;132;01m{[39;00m[38;5;28mlist[39m(supported)[38;5;132;01m}[39;00m[38;5;124m: pass [39m[38;5;132;01m{[39;00mwanted[38;5;132;01m}[39;00m[38;5;124m'[39m
[1;32m    167[0m                   [38;5;124m'[39m[38;5;124m as keyword arg(s)[39m[38;5;124m'[39m,
[1;32m    168[0m                   stacklevel[38;5;241m=[39mstacklevel,
[1;32m    169[0m                   category[38;5;241m=[39mcategory)
[0;32m--> 171[0m [38;5;28;01mreturn[39;00m [43mfunc[49m[43m([49m[38;5;241;43m*[39;49m[43margs[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m

File [0;32m/opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/graphviz/rendering.py:122[0m, in [0;36mRender.render[0;34m(self, filename, directory, view, cleanup, format, renderer, formatter, neato_no_op, quiet, quiet_view, outfile, engine, raise_if_result_exists, overwrite_source)[0m
[1;32m    118[0m filepath [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39msave(filename, directory[38;5;241m=[39mdirectory, skip_existing[38;5;241m=[39m[38;5;28;01mNone[39;00m)
[1;32m    120[0m args[38;5;241m.[39mappend(filepath)
[0;32m--> 122[0m rendered [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_render[49m[43m([49m[38;5;241;43m*[39;49m[43margs[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m
[1;32m    124[0m [38;5;28;01mif[39;00m cleanup:
[1;32m    125[0m     log[38;5;241m.[39mdebug([38;5;124m'[39m[38;5;124mdelete [39m[38;5;132;01m%r[39;00m[38;5;124m'[39m, filepath)

File [0;32m/opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/graphviz/_tools.py:171[0m, in [0;36mdeprecate_positional_args.<locals>.decorator.<locals>.wrapper[0;34m(*args, **kwargs)[0m
[1;32m    162[0m     wanted [38;5;241m=[39m [38;5;124m'[39m[38;5;124m, [39m[38;5;124m'[39m[38;5;241m.[39mjoin([38;5;124mf[39m[38;5;124m'[39m[38;5;132;01m{[39;00mname[38;5;132;01m}[39;00m[38;5;124m=[39m[38;5;132;01m{[39;00mvalue[38;5;132;01m!r}[39;00m[38;5;124m'[39m
[1;32m    163[0m                        [38;5;28;01mfor[39;00m name, value [38;5;129;01min[39;00m deprecated[38;5;241m.[39mitems())
[1;32m    164[0m     warnings[38;5;241m.[39mwarn([38;5;124mf[39m[38;5;124m'[39m[38;5;124mThe signature of [39m[38;5;132;01m{[39;00mfunc[38;5;241m.[39m[38;5;18m__name__[39m[38;5;132;01m}[39;00m[38;5;124m will be reduced[39m[38;5;124m'[39m
[1;32m    165[0m                   [38;5;124mf[39m[38;5;124m'[39m[38;5;124m to [39m[38;5;132;01m{[39;00msupported_number[38;5;132;01m}[39;00m[38;5;124m positional args[39m[38;5;124m'[39m
[1;32m    166[0m                   [38;5;124mf[39m[38;5;124m'[39m[38;5;124m [39m[38;5;132;01m{[39;00m[38;5;28mlist[39m(supported)[38;5;132;01m}[39;00m[38;5;124m: pass [39m[38;5;132;01m{[39;00mwanted[38;5;132;01m}[39;00m[38;5;124m'[39m
[1;32m    167[0m                   [38;5;124m'[39m[38;5;124m as keyword arg(s)[39m[38;5;124m'[39m,
[1;32m    168[0m                   stacklevel[38;5;241m=[39mstacklevel,
[1;32m    169[0m                   category[38;5;241m=[39mcategory)
[0;32m--> 171[0m [38;5;28;01mreturn[39;00m [43mfunc[49m[43m([49m[38;5;241;43m*[39;49m[43margs[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m

File [0;32m/opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/graphviz/backend/rendering.py:324[0m, in [0;36mrender[0;34m(engine, format, filepath, renderer, formatter, neato_no_op, quiet, outfile, raise_if_result_exists, overwrite_filepath)[0m
[1;32m    320[0m     [38;5;28;01mraise[39;00m exceptions[38;5;241m.[39mFileExistsError([38;5;124mf[39m[38;5;124m'[39m[38;5;124moutput file exists: [39m[38;5;132;01m{[39;00mos[38;5;241m.[39mfspath(outfile)[38;5;132;01m!r}[39;00m[38;5;124m'[39m)
[1;32m    322[0m cmd [38;5;241m+[39m[38;5;241m=[39m args
[0;32m--> 324[0m [43mexecute[49m[38;5;241;43m.[39;49m[43mrun_check[49m[43m([49m[43mcmd[49m[43m,[49m
[1;32m    325[0m [43m                  [49m[43mcwd[49m[38;5;241;43m=[39;49m[43mfilepath[49m[38;5;241;43m.[39;49m[43mparent[49m[43m [49m[38;5;28;43;01mif[39;49;00m[43m [49m[43mfilepath[49m[38;5;241;43m.[39;49m[43mparent[49m[38;5;241;43m.[39;49m[43mparts[49m[43m [49m[38;5;28;43;01melse[39;49;00m[43m [49m[38;5;28;43;01mNone[39;49;00m[43m,[49m
[1;32m    326[0m [43m                  [49m[43mquiet[49m[38;5;241;43m=[39;49m[43mquiet[49m[43m,[49m
[1;32m    327[0m [43m                  [49m[43mcapture_output[49m[38;5;241;43m=[39;49m[38;5;28;43;01mTrue[39;49;00m[43m)[49m
[1;32m    329[0m [38;5;28;01mreturn[39;00m os[38;5;241m.[39mfspath(outfile)

File [0;32m/opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/graphviz/backend/execute.py:84[0m, in [0;36mrun_check[0;34m(cmd, input_lines, encoding, quiet, **kwargs)[0m
[1;32m     82[0m [38;5;28;01mexcept[39;00m [38;5;167;01mOSError[39;00m [38;5;28;01mas[39;00m e:
[1;32m     83[0m     [38;5;28;01mif[39;00m e[38;5;241m.[39merrno [38;5;241m==[39m errno[38;5;241m.[39mENOENT:
[0;32m---> 84[0m         [38;5;28;01mraise[39;00m ExecutableNotFound(cmd) [38;5;28;01mfrom[39;00m [38;5;21;01me[39;00m
[1;32m     85[0m     [38;5;28;01mraise[39;00m
[1;32m     87[0m [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m quiet [38;5;129;01mand[39;00m proc[38;5;241m.[39mstderr:

[0;31mExecutableNotFound[0m: failed to execute PosixPath('dot'), make sure the Graphviz executables are on your systems' PATH
ExecutableNotFound: failed to execute PosixPath('dot'), make sure the Graphviz executables are on your systems' PATH

